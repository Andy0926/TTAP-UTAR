<UserControl x:Class="Time_Table_Arranging_Program.User_Control.SubjectViewFolder.SubjectView"
             xmlns:Model="clr-namespace:Time_Table_Arranging_Program.Model"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:Time_Table_Arranging_Program.User_Control"
             xmlns:class="clr-namespace:Time_Table_Arranging_Program.Class"
             xmlns:errorMessageType="clr-namespace:Time_Table_Arranging_Program.User_Control.CheckboxWithListDownMenuFolder.ErrorMessageType"
             mc:Ignorable="d" MouseEnter="SubjectView_OnMouseEnter" MouseLeave="SubjectView_OnMouseLeave">
    <UserControl.DataContext>
        <Model:SubjectModel />
    </UserControl.DataContext>
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="View slots" Click="ViewSlotsContextMenuItem_OnClick" />
        </ContextMenu>
    </UserControl.ContextMenu>
    <materialDesign:DrawerHost x:Name="DrawerHost" CloseOnClickAway="False">
        <materialDesign:DrawerHost.Style>
            <Style TargetType="materialDesign:DrawerHost">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ClashingErrorType}" Value="NoError">
                        <Setter Property="IsRightDrawerOpen" Value="False" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClashingErrorType}" Value="SingleClashingError">
                        <Setter Property="IsRightDrawerOpen" Value="True" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ClashingErrorType}" Value="GroupClashingError">
                        <Setter Property="IsRightDrawerOpen" Value="True" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </materialDesign:DrawerHost.Style>
        <materialDesign:DrawerHost.RightDrawerContent>
            <Border Background="DarkRed">
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="AlertOctagon" HorizontalAlignment="Center"
                                             VerticalAlignment="Center" Margin="10 10 5 10" Height="25" Width="25"
                                             Foreground="White" />
                    <ContentControl x:Name="ErrorContent">
                        <ContentControl.Style>
                            <Style TargetType="ContentControl">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ClashingErrorType}" Value="SingleClashingError">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <errorMessageType:SingleClashingError
                                                    NameOfClashingCounterpart="{Binding NameOfClashingCounterpart}" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ClashingErrorType}" Value="GroupClashingError">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <errorMessageType:GroupClashingError />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentControl.Style>
                    </ContentControl>
                </StackPanel>
            </Border>
        </materialDesign:DrawerHost.RightDrawerContent>
        <DockPanel LastChildFill="True">
            <Popup x:Name="ListViewPopup" StaysOpen="True" PopupAnimation="Scroll" AllowsTransparency="True"
                   Placement="Mouse" MaxHeight="500" Closed="ListViewPopup_OnClosed">
                <DockPanel x:Name="PopupDp">
                    <GroupBox Style="{DynamicResource MaterialDesignCardGroupBox}">
                        <GroupBox.Header>
                            <DockPanel LastChildFill="True">
                                <DockPanel.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="Background" Value="White" />
                                        <Setter Property="Width" Value="30" />
                                        <Setter Property="Height" Value="25" />
                                        <Setter Property="HorizontalAlignment" Value="Right" />
                                        <Setter Property="FontWeight" Value="ExtraBold" />
                                        <Setter Property="FontSize" Value="15" />
                                        <Setter Property="BorderThickness" Value="0" />
                                    </Style>
                                </DockPanel.Resources>
                                <Button DockPanel.Dock="Right"
                                                Style="{StaticResource MaterialDesignFlatButton}" Foreground="White"
                                                Background="LightCoral" Click="CloseButton_OnClick" ToolTip="Close">
                                    <materialDesign:PackIcon Kind="WindowClose" />
                                </Button>
                                <Button DockPanel.Dock="Right"
                                                Style="{StaticResource MaterialDesignFlatButton}" Foreground="WhiteSmoke"
                                                x:Name="HidePopupButton" Click="HideButton_Click" ToolTip="Minimize">
                                    <materialDesign:PackIcon Kind="WindowMinimize" />
                                </Button>
                                <TextBlock x:Name="SubjectNameLabel" Style="{StaticResource MaterialDesignTitleTextBlock}"
                                       Text="{Binding Name}" Foreground="White"
                                       VerticalAlignment="Center" HorizontalAlignment="Stretch" Cursor="SizeAll"/>
                            </DockPanel>
                        </GroupBox.Header>
                        <DockPanel LastChildFill="True" Margin="5">
                            <Rectangle DockPanel.Dock="Top" Height="1" Fill="LightGray" />
                            <Border BorderThickness="1" BorderBrush="LightGray">
                                <ListView x:Name="ListView" DockPanel.Dock="Bottom" Margin="4"
                                              ItemsSource="{Binding Slots}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Header="UID" DisplayMemberBinding="{Binding UID}" />
                                            <GridViewColumn Header=" TYPE " DisplayMemberBinding="{Binding Type}" />
                                            <GridViewColumn Header=" NO. " DisplayMemberBinding="{Binding Number}" />
                                            <GridViewColumn Header=" TIME "
                                                                DisplayMemberBinding="{Binding TimePeriod}" />
                                            <GridViewColumn Header=" DAY " DisplayMemberBinding="{Binding Day}" />
                                            <GridViewColumn Header=" WEEK "
                                                                DisplayMemberBinding="{Binding WeekNumber}" />
                                            <GridViewColumn Header=" VENUE " DisplayMemberBinding="{Binding Venue}" />
                                        </GridView>
                                    </ListView.View>
                                </ListView>
                            </Border>
                        </DockPanel>
                    </GroupBox>
                </DockPanel>
            </Popup>
            <Border x:Name="Border" BorderBrush="Gray" BorderThickness="0,0,0,1" Padding="2"
                    MouseDown="Border_OnMouseDown" Cursor="Hand">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="Background" Value="LightCyan" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                <Setter Property="Background" Value="WhiteSmoke" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused}" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <DockPanel HorizontalAlignment="Stretch">
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Visibility="Visible" Margin="5,0,0,0" DockPanel.Dock="Left" x:Name="Checkbox"
                              VerticalAlignment="Center">
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleY="1.6" ScaleX="1.6" />
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                    <StackPanel DockPanel.Dock="Left" VerticalAlignment="Center">
                        <local:HighlightTextBlock FontSize="14" DockPanel.Dock="Left"
                                                  x:Name="SubjectNameHighlightTextBlock" Text="{Binding Name}"
                                                  HighlightedText="{Binding HighlightedText}" Margin="10,5,5,2"
                                                  Cursor="Hand" VerticalAlignment="Center" FontWeight="DemiBold" />
                        <local:HighlightTextBlock x:Name="SubjectCodeHighlightTextBlock" VerticalAlignment="Center"
                                                  Text="{Binding CodeAndNameInitials}"
                                                  HighlightedText="{Binding HighlightedText}" Margin="15,0,0,5" />
                    </StackPanel>
                    <Button x:Name="ChooseSlotButton" Margin="5" FontSize="11" DockPanel.Dock="Right"
                            VerticalAlignment="Center"
                            Click="ChooseSlotButton_Click" ToolTip="View slots" HorizontalAlignment="Right">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                        <Setter Property="Visibility" Value="Visible" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <materialDesign:PackIcon Kind="Eye" />
                    </Button>

                </DockPanel>
            </Border>

        </DockPanel>
    </materialDesign:DrawerHost>
</UserControl>